name: Build and deploy the Zoom WebHook API to AKS with Helm

on:
  push:
    branches:
      - "develop"
    paths:
      - 'PrizeDraw.ZoomWebhook.Api/**'
  workflow_dispatch:

env:
  IMAGE_NAME: prizedraw-zoomwebhook
  DOCKERFILE_PATH: ./PrizeDraw.ZoomWebhook.Api/Dockerfile
  DOCKER_CONTEXT_PATH: ./PrizeDraw.ZoomWebhook.Api/.
  CHART_PATH: ./PrizeDraw.ZoomWebhook.Api/DevOps/WebChart/
  HELM_RELEASE_NAME: web
  NAMESPACE: dotnetoxford-prizedraw

jobs:
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Azure login
      uses: azure/login@v1.4.3
      with:
        creds: ${{ secrets.AZURE_CREDS }}

    - name: Build and push image to ACR
      run: |
        az acr build --image ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} --registry ${{ secrets.AZURE_CONTAINER_REGISTRY }} -g ${{ secrets.ACR_RESOURCE_GROUP }} -f ${{ env.DOCKERFILE_PATH }} ${{ env.DOCKER_CONTEXT_PATH }}

  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [buildImage]
    steps:
    - uses: actions/checkout@v3

    - name: Azure login
      uses: azure/login@v1.4.3
      with:
        creds: ${{ secrets.AZURE_CREDS }}

    - name: Set K8s context
      uses: azure/aks-set-context@v2.0
      with:
        resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
        cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

    - name: Helm install
      run: |
        helm upgrade \
          --install \
          --namespace ${{ env.NAMESPACE }} \
          --create-namespace \
          --set image.tag=${{ github.sha }} \
          --set image.name=${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }} \
          --set config.keyVaultUri=${{ secrets.KEYVAULTURI }} \
          --set config.appInsightsInstrumentationKey=${{ secrets.APPINSIGHTS_INSTRUMENTATION_KEY }} \
          --set managedIdentity.resourceId=${{ secrets.MANAGED_IDENTITY_RESOURCE_ID }} \
          --set managedIdentity.clientId=${{ secrets.MANAGED_IDENTITY_CLIENT_ID }} \
          ${{ env.HELM_RELEASE_NAME }} \
          ${{ env.CHART_PATH }}
